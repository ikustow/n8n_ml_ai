{
  "name": "data_analyst",
  "nodes": [
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "sessionId"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -16,
        176
      ],
      "id": "f7b64207-a597-44f6-a8b8-a77a8885b200",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        400,
        432
      ],
      "id": "a3198d8f-9b7a-4a89-805c-a3440c622caf",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "4Hyy62lHGp6Iexmc",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Code1').item.json.sessionId }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        592,
        432
      ],
      "id": "ecca4f20-c341-4ba2-b8b1-e5f4fd76a9f0",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"analytics_report\": \"\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        752,
        432
      ],
      "id": "b26ba101-2335-4de2-9b1f-fa59a1f165d8",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "session_table",
        "filters": {
          "conditions": [
            {
              "keyName": "session_id",
              "condition": "eq",
              "keyValue": "={{ $('Code1').first().json.sessionId}}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "analytics_report",
              "fieldValue": "={{ $json.output.analytics_report }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        864,
        176
      ],
      "id": "6c325780-a311-45e0-8286-970c0e382992",
      "name": "Update a row",
      "credentials": {
        "supabaseApi": {
          "id": "6IICvvLdHjaBlV2r",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// 0. Константа на случай, если у первого элемента нет sessionId\nconst FALLBACK_ID = '123213213';\n\n// 1. Берём все входные элементы сразу\nconst items = $input.all();          // массив объектов {json, binary?}\n\n// 2. Определяем, какой sessionId будем писать:\n//    — если у первого элемента он уже есть → берём его;\n//    — иначе используем запасное значение.\nconst sessionId = $input.first().json.sessionId || FALLBACK_ID;\n\n// 3. Проходимся по каждому элементу и устанавливаем поле\nfor (const item of items) {\n  item.json.sessionId = sessionId;   // перезаписывает или добавляет поле\n}\n\n// 4. Обязательно вернуть массив items\nreturn items;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        176,
        176
      ],
      "id": "b1e4e451-828a-44ff-8292-729eae0231f5",
      "name": "Code1"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "session_table",
        "filters": {
          "conditions": [
            {
              "keyName": "session_id",
              "keyValue": "={{ $json.sessionId }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        352,
        176
      ],
      "id": "d553afce-f60d-4ff3-9fd3-d685d0490ab2",
      "name": "Get a row",
      "credentials": {
        "supabaseApi": {
          "id": "6IICvvLdHjaBlV2r",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=\nYou have a cluster analysis   {{ $json.segments_report }} conduct a date and business analysis on it, suggest ways to improve the cluster's performance. Tjis report based on next dataset {{ $json.dataset_description }} ",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are an analyst agent for analyzing student clustering results.\nYour tasks:\n1. Compare clusters and analyze differences\n2. Identify patterns and common characteristics\n3. Generate recommendations for working with each group\n\nDon't lose information - use all available data to create comprehensive analysis."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        512,
        176
      ],
      "id": "93269e0b-544a-408d-94cd-dc23557d1639",
      "name": "data_analyst"
    }
  ],
  "pinData": {},
  "connections": {
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "data_analyst",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "data_analyst",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "data_analyst",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Get a row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a row": {
      "main": [
        [
          {
            "node": "data_analyst",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "data_analyst": {
      "main": [
        [
          {
            "node": "Update a row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "7afe8637-8631-43ca-a6b9-cedd0b297a51",
  "meta": {
    "instanceId": "aff6233ea1a957f14a29dfbff3b08f776f10dd895024c1773cc4b009bd2f2c86"
  },
  "id": "h2FTlMmbYecrh6eX",
  "tags": []
}